[versions]
kotlin = "1.9.21"
agp = "8.2.0"

androidx-core = "1.12.0"
androidx-lifecycle = "2.6.2"
androidx-datastore = "1.0.0"
androidx-activity = "1.8.2"
androidx-room = "2.6.1"
androidx-navigation = "2.7.6"

compose = "1.5.4"
compose-compiler = "1.5.7"

apollo = "3.8.2"
coroutines = "1.7.3"
accompanist = "0.30.1"
mavericks = "3.0.8"
desugar = "2.0.4"
dagger = "2.50"
leakcanary = "2.12"
okhttp = "4.12.0"
retrofit = "2.9.0"

timber = "5.0.1"
turbine = "1.0.0"
kotest = "5.8.0"
mockk = "1.13.8"
junit = "5.10.1"

[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
apollo = { id = "com.apollographql.apollo3", version.ref = "apollo" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "dagger" }

[libraries]
desugar = { module = "com.android.tools:desugar_jdk_libs", version.ref = "desugar" }

androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }
androidx-lifecycle-runtime = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidx-lifecycle" }
androidx-room-runtime = { module = "androidx.room:room-runtime", version.ref = "androidx-room" }
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "androidx-room" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "androidx-room" }
androidx-datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "androidx-datastore" }

coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

compose-ui-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-material-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }

hilt-android = { module = "com.google.dagger:hilt-android", version.ref = "dagger" }
hilt-compiler = { module = "com.google.dagger:hilt-compiler", version.ref = "dagger" }

apollo-api = { module = "com.apollographql.apollo3:apollo-api", version.ref = "apollo" }
apollo-runtime = { module = "com.apollographql.apollo3:apollo-runtime", version.ref = "apollo" }

retrofit-lib = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofit-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit" }

okhttp-core = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }

mavericks-compose = { module = "com.airbnb.android:mavericks-compose", version.ref = "mavericks" }
mavericks-hilt = { module = "com.airbnb.android:mavericks-hilt", version.ref = "mavericks" }
mavericks-testing = { module = "com.airbnb.android:mavericks-testing", version.ref = "mavericks" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
kotest = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
